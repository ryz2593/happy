package com.ryz2593.happy;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.ryz2593.happy.util.FileUtil;

import java.io.File;
import java.util.*;

/**
 * @author ryz2593
 */
public class GetFileName {

    static final List<String> excludeFolder = Arrays.asList("images", "js", "resource", "FAQ", "CacheData", "config", "script", "inappmessage");
    static final List<String> excludeExt = Arrays.asList("jpg", "png", "js", "css", "JPG", "db", "json", "zip", "xlsx");
    static final List<String> excludeContains = Arrays.asList("index_");
    static final List<String> excludeSuffix = Arrays.asList("_cs", "_ct", "_de", "_en", "_es", "_fr", "_id", "_it", "_jp", "_kr", "_pt", "_ru", "_tw");
    static final String existStaticJsonFilePath = "D:\\IdeaProjects\\private_source\\happy\\happy-common\\src\\main\\resources\\staticIwindowList.json";
    static final String iosAllStyleNos =
            "0_1,0_5000,11_0000000001,11_000000001,11_00000001,11_011,11_11,11_21,19_10001,19_20001,19_30001,19_40001," +
            "19_4999,25_3000,25_4000,25_5000,2_0001,2_0002,2_0003,2_0004,2_0005,2_0006,2_0007,2_0008,2_0009,2_0010,2_0011,2_0012,2_0013,2_0014," +
            "2_0015,2_0016,2_0017,2_0018,2_0019,2_0020,2_0021,2_0022,2_0023,2_0024,2_0025,2_4151,2_4161,2_4171,2_4191,2_4201,2_4211,2_4221,2_4231," +
            "2_4241,2_4271,2_4281,2_4291,2_4701,2_4711,2_4721,2_4731,2_4741,2_4751,2_4761,2_4771,2_4781,2_5000,2_5001,2_5002,2_5003,2_5004,2_5005," +
            "3_0000001,3_000001,3_000011,3_00011,3_0011,3_011,3_21,3_31,3_4,10019,10018,10017,10016,10024,10023,10022,10021,10034,10033,10032,10031," +
            "10029,10028,10027,10026,10040,10039,10038,10037,10036,10049,10048,10047,10046,10051,10056,10061,10062,10063,10064,10066,10067,10068,10069," +
            "10071,10076,10077,10078,10079,10081,10086,10087,10088,10089,10091,10092,10093,10094,10096,10097,10098,10099,10101,10102,10103,10104,10106," +
            "10004,10003,10002,10001,10009,10008,10007,10006,10014,10013,10012,10011,10111,10116,10121,10122,10123,10124,100126,100127,100128,100129," +
            "100816,100817,100818,100819,100821,100826,100827,100828,100829,100831,100836,100837,100838,100839,100841,100842,100843,100844,100846,100851," +
            "100856,100857,100858,100859,1_1,1_2,1_3,1_4,100871,100876,100881,100882,100883,100884,100886,100887,100888,100889,100891,100896,100901,100902," +
            "100903,100904,100906,100907,100908,100909,100911,100912,100913,100914,100916,100917,100918,100919,100921,100922,100923,100924,100926,100927," +
            "100928,100929,100931,100932,100933,100934,100951,100956,100957,100958,100959,100961,100962,100963,100964,100966,100967,100968,100969,100971," +
            "100976,100981,100986,100987,100988,100989,100991,100992,100993,100994,100996,100997,100998,100999,101001,101002,101003,101004,101006,101007," +
            "101008,101009,101011,101016,101017,101018,101019,101026,101027,101028,101029,101031,101032,101033,101034,101036,101037,101038,101039,101061," +
            "101062,101063,101064,101066,101071,101072,101073,101074,101076,101081,101082,101083,101084,101086,101087,101088,101089,101091,101092,101093," +
            "101094,101096,101097,101098,101099,101101,101102,101103,101104,101106,101107,101108,101109,101111,101112,101113,101114,101116,101117,101118," +
            "101119,101121,101122,101123,101124,101126,101127,101128,101129,101131,101132,101133,101134,101136,101137,101138,101139,101141,101142,101143," +
            "101144,101146,101147,101148,101149,51,50,41,40,32,31,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,101151,101152,101153," +
            "101154,101156,101157,101158,101159,2_4131,2_4121,2_4111,2_4101,2_4091,2_4081,2_4071,2_4061,2_4051,101161,101162,101163,101164,2_4031,101171," +
            "2_4041,2_4141,101166,101176,101177,101178,101179,101181,101182,101183,101184,2_3971,2_3961,2_3951,101191,101192,101193,101194,101186,101187," +
            "101188,101189,101201,101202,101203,101204,101205,101206,101207,101208,101209,101210,101211,101212,101216,101217,101218,101219,2_3891,101226," +
            "101227,101228,101229,101236,2_3881,101231,101232,101233,101234,2_3871,2_3861,2_3841,2_3831,2_3811,2_3851,2_3821,2_3801,2_3791,2_3781,2_3771," +
            "2_3761,2_3751,2_3741,2_3731,50037,50034,50036,50033,50035,101241,101242,101243,101244,2_3721,2_3711,2_3701,2_3671,2_3651,2_3691,2_3681,2_3661," +
            "2_3641,2_3631,2_0031,2_0032,2_0033,2_0034,2_0035,2_0036,2_0037,2_0038,2_0039,2_0040,2_0041,2_0042,2_0043,2_0044,2_0045,2_0046,2_0047,2_0048," +
            "2_0049,2_0050,2_0051,2_0052,2_0053,2_0054,2_0055,2_0056,2_0057,2_0058,2_0059,2_0060,2_0061,2_0062,2_0063,2_0064,2_0065,2_0066,2_0067,2_0068," +
            "2_0069,2_0070,2_0071,2_0072,2_0073,101246,101247,101248,101249,2_3621,2_3611,2_3601,2_3591,101266,101267,101268,101269,3_4,2_3581,2_3571,2_3561," +
            "2_3551,101271,101272,101273,101274,7497,7499,7498,7496,7495,7500,2_3541,101276,101277,101278,101279,2_3511,2_3501,2_3491,2_3471,2_3461,2_3451," +
            "2_3441,2_3521,2_3531,101281,101282,101283,101284,2_3941,2_3931,2_3921,2_3911,2_3901,2_39410,2_39310,2_39210,2_39110,2_39010,101286,101287,101288," +
            "101289,2_3431,101291,101292,101293,101294,2_3421,101301,101302,101303,101304,2_3411,101306,101307,101308,101309,101311,101312,101313,101314," +
            "2_3371,2_3361,2_3351,2_3341,2_3331,2_3391,2_3381,2_3401,101316,101317,101318,101319,2_3321,2_3311,2_3301,2_3291,2_3281,2_0081,2_0082,2_0083," +
            "2_0084,2_0085,2_0086,2_0074,2_0075,2_0076,2_0077,2_0078,2_0079,2_0080,101321,101322,101323,101324,2_3271,2_3261,2_3251,2_3241,2_3231,2_3221," +
            "2_3211,2_3201,2_3191,2_3181,2_3141,2_3131,2_3121,2_3171,2_3161,2_3151,101326,101327,101328,101329,2_3111,2_3101,2_3091,2_3081,2_3071,2_3061," +
            "2_3051,2_3041,2_3031,2_3021,2_3011,2_3001,101331,101332,101333,101334,2_2981,2_2971,2_2961,2_2951,2_2941,2_2931,2_2921,2_2911,2_2901,101336," +
            "101337,101338,101339,2_2991,2_2891,2_2881,2_2871,2_2861,2_2851,2_2841,2_2831,2_2821,2_2811,2_2761,2_2771,2_2781,2_2791,2_2801,101341,101342," +
            "101343,101344,2_2751,2_2731,2_2741,101356,101357,101358,101359,101351,101352,101353,101354,101346,101347,101348,101349,101361,101362,101363," +
            "101364,101366,101367,101368,101369,101376,101377,101378,101379,101371,101372,101373,101374,2_2691,2_2681,2_2671,2_2661,2_2651,2_2611,2_2621," +
            "2_2631,2_2641,2_2601,2_2591,2_2581,2_2541,2_2551,2_2561,2_2571,7390,7386,7387,7388,7389,7383,7384,7385,923300,923302,923241,923239,923240," +
            "923221,922962,923242,923220,922957,7378,7379,923600,923626,923629,923630,923656,923657,923689,7377,923242,923273,923300,923302,923333,923540," +
            "923577,923594,923598,923178,923208,923217,923220,923221,923225,923236,923239,923240,923241,7373,7368,7367,922949,922957,922962,923095,923110," +
            "923124,922546,922548,922565,922753,922776,922807,922881,922917,922927,922929,101381,101382,101383,101384,101386,101387,101388,101389,101391," +
            "101392,101393,101394,101396,101397,101398,101399,101401,101402,101403,101404,922257,922258,922259,922260,922261,922514,922524,922533,922534," +
            "7366,7365,7364,7363,922127,922129,922138,922139,922140,922141,922142,922253,922255,922256,7348,7347,7346,7349,7350,7351,7354,7353,7352,7357," +
            "7356,7355,7345,7344,7343,7342,7341,7340,7339,7338,7337,7336,7335,7334,7333,7332,7331,7330,7329,7323,7322,7321,7320,7319,7318,7317,7316,7315," +
            "7314,7313,7312,7311,7310,7309,7308,7307,7306,7305,7304,7303,7302,7301,7300,7299,7298,7297,7296,7295,7294,7293,7292,7291,7290,7289,7287,7286," +
            "7285,7284,7283,7282,7288,7281,7280,7279,7277,7276,7275,7274,7273,7272,7271,7278,7270,7269,7268,101406,101407,101408,101409,101501,101502," +
            "101503,101504,101406,101407,101408,101409,101507,101601,101602,101606,101607,101608,101609,101701,101702,101703,101704,101706,101707,101708," +
            "101709,7267,101806,101807,101808,101809,7257,7256,7255,101901,101902,101903,101904,101906,101907,101908,101909,102006,102007,102001,102002," +
            "102003,102004,7254,7253,7252,102011,102012,102013,102014,102016,102017,102018,102019,102021,102022,102023,102024,102025,102026,102027,102028," +
            "102035,102031,102032,102034,7251,102046,102047,102048,102049,102051,102052,102053,102054,102056,102061,102066,102071,102076,102081,102086," +
            "102091,7250,7247,7248,7249,102097,102101,102102,102106,7246,7245,7240,7239,7244,7243,102111,102112,102113,102114,7242,7241,102121,102123,102126," +
            "102116,102117,102118,102119,7238,7237,102131,102132,102133,102134,7236,102136,102137,102141,102142,7234,7233,7232,7231,7230,102146,102147,102148," +
            "102149,7229,7228,7227,7226,102151,102152,102153,102154,7224,7223,7222,7221,7220,7217,7218,7219,7216,7215,7214,7213,7212,7211,7210,7209,7208," +
            "7207,7206,7205,7204,7203,7202,7201,7200,7199,7198,7197,7196,7195,7194,7193,7192,7191,7184,7185,7186,7190,7189,7188,7187,7183,7181,7180,7179," +
            "7178,7182,7177,7176,7175,7174,7172,7171";
    static final String androidAllStyleNos =
            "2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,7736,7737,7738,7756," +
            "7770,7793,7814,7823,7824,7842,7857,7861,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7883,7884,7885," +
            "7886,7890,7894,7896,7898,7899,7901,7902,7903,7904,7987,7988,7989,7991,7992,7993,7995,7997,8000,8005,10019,10018,10017,10016,10024,10023," +
            "10022,10021,10034,10033,10032,10031,10029,10028,10027,10026,10049,10048,10047,10046,10051,10056,10061,10062,10063,10064,10071,10076,10077," +
            "10078,10079,10081,10086,10087,10088,10089,10091,10092,10093,10094,10096,10097,10098,10099,10101,10102,10103,10104,10106,10004,10003,10002," +
            "10001,10009,10008,10007,10006,10014,10013,10012,10011,10111,10116,10121,10122,10123,10124,100126,100127,100128,100129,100816,100817,100818," +
            "100819,100821,100826,100827,100828,100829,100831,100836,100837,100838,100839,100841,100842,100843,100844,100846,100851,100856,100857," +
            "100858,100859,100861,100862,100863,100864,100871,100876,100881,100882,100883,100884,100886,100887,100888,100889,100891,100896,100901," +
            "100902,100903,100904,100906,100907,100908,100909,100911,100912,100913,100914,100916,100917,100918,100919,100921,100922,100923,100924," +
            "100926,100927,100928,100929,100931,100932,100933,100934,100936,100936,100941,100946,100951,100956,100957,100958,100959,100961,100962," +
            "100963,100964,100966,100967,100968,100969,100971,100976,100981,100986,100987,100988,100989,100991,100992,100993,100994,100996,100997," +
            "100998,100999,101001,101002,101003,101004,101006,101007,101008,101009,101011,101016,101017,101018,101019,101021,101022,101023,101024," +
            "101026,101027,101028,101029,101031,101032,101033,101034,101036,101037,101038,101039,101061,101062,101063,101064,101066,101071,101072," +
            "101073,101074,101076,101081,101082,101083,101084,101086,101087,101088,101089,101091,101092,101093,101094,101096,101097,101098,101099," +
            "101101,101102,101103,101104,101106,101107,101108,101109,101111,101112,101113,101114,101116,101117,101118,101119,101121,101122,101123," +
            "101124,101126,101127,101128,101129,101131,101132,101133,101134,101136,101137,101138,101139,101141,101142,101143,101144,101146,101147," +
            "101148,101149,51,50,41,40,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,101151,101152,101153,101154,101156,101157,101158,101159," +
            "7709,7691,7695,7696,7699,7700,7704,7697,7708,7688,101161,101162,101163,101164,7677,101171,101166,7687,101176,101177,101178,101179," +
            "101181,101182,101183,101184,7652,7648,7683,101191,101192,101193,101194,101186,101187,101188,101189,101201,101202,101203,101204,101205," +
            "101206,101207,101208,101209,101210,101211,101212,101216,101217,101218,101219,7626,101226,101227,101228,101229,101236,7625,101231," +
            "101232,101233,101234,7599,7600,7611,7591,7592,7621,7590,7589,7585,7588,7587,7586,7584,7583,7579,50037,50034,50036,50033,50035,101241," +
            "101242,101243,101244,7602,7614,7616,7548,7546,7552,7551,7547,7545,7581,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042," +
            "2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068," +
            "2069,2070,2071,2072,2073,101246,101247,101248,101249,7539,7536,7535,7517,101266,101267,101268,101269,8005,7508,7507,7506,7505,101271," +
            "101272,101273,101274,7497,7499,7498,7500,7496,7495,7494,101276,101277,101278,101279,7488,7487,7486,7485,7484,7483,7490,7491,101281," +
            "101282,101283,101284,7645,7644,7643,7642,7641,76450,76440,76430,76420,76410,101286,101287,101288,101289,7480,101291,101292,101293," +
            "101294,7479,101301,101302,101303,101304,7478,101306,101307,101308,101309,101311,101312,101313,101314,7474,7473,7472,7471,7470,7476," +
            "7475,7477,101316,101317,101318,101319,7469,7468,7467,7466,7465,2081,2082,2083,2084,2085,2086,2074,2075,2076,2077,2078,2079,2080," +
            "101321,101322,101323,101324,7464,7463,7462,7461,7460,7459,7458,7457,7456,7455,7451,7450,7449,7454,7453,7452,101326,101327,101328," +
            "101329,7448,7447,7446,7445,7444,7443,7442,7441,7440,7439,7438,7437,101331,101332,101333,101334,7435,7434,7433,7432,7431,7430,7429," +
            "7428,7427,101336,101337,101338,101339,7436,7426,7425,7424,7423,7422,7421,7420,7419,7418,7413,7414,7415,7416,7417,101341,101342,101343," +
            "101344,7412,7410,7411,101356,101357,101358,101359,101351,101352,101353,101354,101346,101347,101348,101349,101361,101362,101363,101364," +
            "101366,101367,101368,101369,101376,101377,101378,101379,101371,101372,101373,101374,7406,7405,7404,7403,7402,7398,7399,7400,7401,7397," +
            "7396,7395,7391,7392,7393,7394,7390,7386,7387,7388,7389,7383,7384,7385,923300,923302,923241,923239,923240,923221,922962,923242,923220," +
            "922957,7378,7379,923600,923626,923629,923630,923656,923657,923689,7377,923242,923273,923300,923302,923333,923540,923577,923594,923598," +
            "923178,923208,923217,923220,923221,923225,923236,923239,923240,923241,7373,7368,7367,922949,922957,922962,923095,923110,923124,922546," +
            "922548,922565,922753,922776,922807,922881,922917,922927,922929,101381,101382,101383,101384,101386,101387,101388,101389,101391,101392," +
            "101393,101394,101396,101397,101398,101399,101401,101402,101403,101404,922257,922258,922259,922260,922261,922514,922524,922533,922534," +
            "7366,7365,7364,7363,922127,922129,922138,922139,922140,922141,922142,922253,922255,922256,7348,7347,7346,7349,7350,7351,7354,7353,7352," +
            "7357,7356,7355,7345,7344,7343,7342,7341,7340,7339,7338,7337,7336,7335,7334,7333,7332,7331,7330,7329,7323,7322,7321,7320,7319,7318,7317," +
            "7316,7315,7314,7313,7312,7311,7310,7309,7308,7307,7306,7305,7304,7303,7302,7301,7300,7299,7298,7297,7296,7295,7294,7293,7292,7291,7290," +
            "7289,7287,7286,7285,7284,7283,7282,7288,7281,7280,7279,7277,7276,7275,7274,7273,7272,7271,7278,7270,7269,7268,101406,101407,101408," +
            "101409,101501,101502,101503,101504,101406,101407,101408,101409,101507,101601,101602,101606,101607,101608,101609,101701,101702,101703," +
            "101704,101706,101707,101708,101709,7267,101806,101807,101808,101809,7257,7256,7255,101901,101902,101903,101904,101906,101907,101908," +
            "101909,102006,102006,102007,102001,102002,102003,102004,7254,7253,7252,102011,102012,102013,102014,102016,102017,102018,102019,102021," +
            "102022,102023,102024,102025,102026,102027,102028,102035,102031,102032,102034,7251,102046,102047,102048,102049,102051,102052,102053," +
            "102054,102056,102061,102066,102071,102076,102081,102086,102091,7250,7247,7248,7249,102097,102101,102102,102106,7246,7245,7240,7239," +
            "7244,7243,102111,102112,102113,102114,7242,7241,102121,102123,102126,102116,102117,102118,102119,7238,7237,102131,102132,102133," +
            "102134,7236,102136,102137,102141,102142,7234,7233,7232,7231,7230,102146,102147,102148,102149,7229,7228,7227,7226,102151,102152,102153," +
            "102154,7224,7223,7222,7221,7220,7217,7218,7219,7216,7215,7214,7213,7212,7211,7210,7209,7208,7207,7206,7205,7204,7203,7202,7201,7200," +
            "7199,7198,7197,7196,7195,7194,7193,7192,7191,7184,7185,7186,7190,7189,7188,7187,7183,7181,7180,7179,7178,7182,7177,7176,7175,7174,7172," +
                    "7171";
    static final Map<String, String> map = new HashMap();
    static final Map<String, String> allStyleNoMap = new HashMap<>();

    //
    static {
        File file = new File(existStaticJsonFilePath);
        String JsonContext = FileUtil.ReadFile(file.toString());
        JsonArray jsonArray = new JsonParser().parse(JsonContext).getAsJsonArray();
        Set set = new HashSet();
        for (int i = 0; i < jsonArray.size(); i++) {
            JsonObject staticIwindowPathInfo = jsonArray.get(i).getAsJsonObject();
            set.add(staticIwindowPathInfo.get("hotstyleNumber").getAsString());
        }

        for (Object o : set) {
            map.put(o.toString(), "1");
        }

        String[] iosAllStyleNoArr = iosAllStyleNos.split(",");
        for (String s : iosAllStyleNoArr) {
            allStyleNoMap.put(s, "ios");
        }
        String[] androidAllStyleNoArr = androidAllStyleNos.split(",");
        for (String s : androidAllStyleNoArr) {
            allStyleNoMap.put(s,"android");
        }

    }

    public static String[] getFileName(String path) {
        File file = new File(path);
        String[] fileName = file.list();
        return fileName;
    }

    private static boolean inRange(String name) {
        String result = allStyleNoMap.get(name);
        if (result != null) {
            return true;
        }
        return false;

    }

    public static boolean contains(String name) {
        String result = map.get(name);
        if (result != null) {
            return true;
        }
        return false;
    }

    static String getNameFilterExcludeSuffix(String name) {
        for (String suffix : excludeSuffix) {
            if (name.endsWith(suffix)) {
                return name.replace(suffix, "");
            }
        }
        return name;
    }

    static boolean isExcludeFolder(String name) {
        return excludeFolder.contains(name);
    }

    static boolean isExcludeExtFile(String name) {
        return excludeExt.contains(name);
    }

    static boolean isExcludePrefixFile(String name) {
        for (String s : excludeContains) {
            if (name.contains(s)) {
                return true;
            }
        }
        return false;
    }

    private static void testFileDirOrName(String path, String floderName) throws Exception {
        File dirFile = new File(path);
        File[] files = dirFile.listFiles();
        if (files == null) {
            throw new Exception("folder is empty");
        }
        Set<IwindowInfo> set = new HashSet();
        String folderName = floderName;
        for (File fileChildDir : files) {

            if (fileChildDir.isDirectory()) {
                if (isExcludeFolder(fileChildDir.getName())) {
                    continue;
                }
                //输出文件夹名
                if (!fileChildDir.getName().equals("hotstylehtml")) {
                    //System.out.println(fileChildDir.getName());
                    folderName = fileChildDir.getName();
                }
                //通过递归的方式,把目录中的所有文件全部遍历出来
                testFileDirOrName(fileChildDir.getAbsolutePath(), folderName);
            }

            outer:
            if (fileChildDir.isFile()) {
                /*if (fileChildDir.getName().contains("7993")) {
                    System.out.println("fileChildDir.getName() = " + fileChildDir.getName());
                }*/
                Integer pointPos = fileChildDir.getName().lastIndexOf(".");
                if (pointPos < 0) {
                    System.out.println("pointPos = " + pointPos);
                }
                String fileName = fileChildDir.getName().substring(0, pointPos);
                String ext = fileChildDir.getName().substring(pointPos + 1, fileChildDir.getName().length());
                if (isExcludePrefixFile(fileName)) {
                    continue;
                }
                if (isExcludeExtFile(ext)) {
                    continue;
                }

                String name = getNameFilterExcludeSuffix(fileName);

                if (contains(name)) {
                    continue;
                }

                if (!inRange(name)) {
                    continue;
                }


                IwindowInfo iwindowInfo = new IwindowInfo();
                //iwindowInfo.setStyleName(folderName);
                iwindowInfo.setStyleNo(name);
                iwindowInfo.setStylePath(fileChildDir.getAbsolutePath().replace("_cs", "_en"));
                inner:
                for (IwindowInfo info : set) {
                    if (info.getStyleNo().equals(name)) {
                        break outer;
                    }
                }
                String title = HtmlParser.getTitle(fileChildDir.getAbsolutePath().replace("_cs", "_en"));
                if (title == null) {
                    iwindowInfo.setStyleName(floderName);
                } else {
                    iwindowInfo.setStyleName(title);
                }
                set.add(iwindowInfo);
                //输出文件名
                System.out.println(iwindowInfo.toString());

            }
        }
    }

    public static void getAllFileName(String path, ArrayList<String> fileName) {
        File file = new File(path);
        File[] files = file.listFiles();
        String[] names = file.list();
        if (names != null) {
            fileName.addAll(Arrays.asList(names));
        }
        for (File a : files) {
            if (a.isDirectory()) {
                getAllFileName(a.getAbsolutePath(), fileName);
            }
        }
    }

    public static void main(String[] args) throws Exception {
        Long begin = System.currentTimeMillis();
        testFileDirOrName("H:\\iwindowPages", null);
        System.out.println("spend = " + (System.currentTimeMillis() - begin) + " ms");
    }
}
